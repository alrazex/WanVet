{"version":3,"file":"1.js","sources":["webpack:///./Client/modules/+pets/pets.module.ts","webpack:///./Client/modules/+pets/pets.service.ts","webpack:///./Client/modules/+pets/pets-add/pets-add.component.ts","webpack:///./Client/modules/+pets/pets-home/pets-home.component.ts","webpack:///./Client/modules/+pets/pets-timeline/pets-timeline.component.ts","webpack:///./Client/modules/+pets/pets-view/pets-view.component.ts","webpack:///./Client/modules/+pets/pets.component.ts","webpack:///./Client/modules/+pets/pets-add/pets-add.component.html","webpack:///./Client/modules/+pets/pets-home/pets-home.component.html","webpack:///./Client/modules/+pets/pets-timeline/pets-timeline.component.html","webpack:///./Client/modules/+pets/pets-view/pets-view.component.html","webpack:///./Client/modules/+pets/pets.component.html","webpack:///./Client/modules/+pets/pets-add/pets-add.component.scss","webpack:///./Client/modules/+pets/pets-home/pets-home.component.scss","webpack:///./Client/modules/+pets/pets-timeline/pets-timeline.component.scss","webpack:///./Client/modules/+pets/pets-view/pets-view.component.scss","webpack:///./Client/modules/+pets/pets.component.scss","webpack:///./Client/modules/+pets/appointment.model.ts","webpack:///./Client/modules/+pets/pet.model.ts","webpack:///./Client/modules/+pets/pets-add/pets-add.model.ts","webpack:///./Client/modules/+pets/pets.routes.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { PetsComponent } from './pets.component';\r\nimport { PetsHomeComponent } from './pets-home/pets-home.component';\r\nimport { PetsAddComponent } from './pets-add/pets-add.component';\r\nimport { PetsViewComponent } from \"./pets-view/pets-view.component\";\r\nimport { PetsTimelineComponent } from \"./pets-timeline/pets-timeline.component\";\r\n\r\nimport { PetsService } from \"./pets.service\";\r\n\r\nimport { InternalRouterModule } from './pets.routes';\r\n\r\n@NgModule({\r\n    imports: [InternalRouterModule, SharedModule],\r\n    declarations: [\r\n        PetsComponent,\r\n        PetsHomeComponent,\r\n        PetsAddComponent,\r\n        PetsViewComponent,\r\n        PetsTimelineComponent\r\n    ],\r\n    providers: [PetsService]\r\n})\r\nexport class PetsModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets.module.ts","import { Injectable } from '@angular/core';\r\nimport { DataService } from '../shared/services/data.service';\r\nimport { PetAddFormModel } from \"./pets-add/pets-add.model\";\r\nimport { Response } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class PetsService {\r\n\r\n    private petsApiUrl: string = 'api/pets/';\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    create(petAddFormModel: PetAddFormModel) {\r\n        this.dataService.post(this.petsApiUrl, petAddFormModel, {})\r\n            .map(response => { return true }).subscribe((response: Boolean) => { });\r\n    }\r\n\r\n    get(id: string) {\r\n        return this.dataService.get(this.petsApiUrl, { id: id });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidatorFn, FormArray } from '@angular/forms';\r\nimport { IMyDpOptions } from 'mydatepicker';\r\nimport { PetsService } from '../pets.service';\r\nimport { PetAddFormModel } from \"./pets-add.model\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NotificationService } from \"../../shared/services/notification.service\";\r\nimport { User } from \"../../shared/models/user.model\";\r\n\r\n@Component({\r\n    selector: 'appc-pets-add',\r\n    template: require('./pets-add.component.html'),\r\n    styles: [require('./pets-add.component.scss')]\r\n})\r\nexport class PetsAddComponent implements OnInit {\r\n\r\n    storage = localStorage;\r\n\r\n    petForm: FormGroup;\r\n\r\n    private myDatePickerOptions: IMyDpOptions = {\r\n        dateFormat: 'mm-dd-yyyy',\r\n    };\r\n\r\n    constructor(private fb: FormBuilder, private petsService: PetsService, private userService: UserService,\r\n        private notificationService: NotificationService, private router: Router) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userService.getUser().subscribe((user: User) => { this.userService.setCurrentUser(user); });\r\n        this.petForm = this.fb.group({\r\n            name: ['', [Validators.required, Validators.minLength(3)]],\r\n            breed: ['', [Validators.required]],\r\n            sex: 'male',\r\n            species: 'cat',\r\n            colorHex: ['', []],\r\n            birthDate: ['', [Validators.required]],\r\n            profileImageUrl: ['', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    getHeaders(): any {\r\n        let tokenValue = 'Bearer ' + this.retrieve(\"authorizationData\");\r\n        return ([{ header: 'Accept', value: 'application/json' },\r\n        { header: 'Authorization', value: tokenValue }]);\r\n    };\r\n\r\n    retrieve(key: string): string {\r\n        var item = this.storage.getItem(key);\r\n\r\n        if (item && item !== 'undefined') {\r\n            return JSON.parse(this.storage.getItem(key));\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    onSubmit(): void {\r\n        var data = this.petForm.value;\r\n        var currentUser = this.userService.currentUser;\r\n        var petAddFormModel = new PetAddFormModel(data.name, data.species, data.sex, data.breed, data.colorHex,\r\n            currentUser.id, currentUser.email, data.profileImageUrl, data.birthDate.formatted);\r\n        this.petsService.create(petAddFormModel);\r\n        console.log('Submitted: ' + JSON.stringify(petAddFormModel));\r\n        this.notificationService.success('We successfully received your request to add a new pet.');\r\n        this.router.navigate(['/pets']);\r\n    }\r\n\r\n    onColorPickerChanged($event): void {\r\n        this.petForm.patchValue({\r\n            colorHex: $event\r\n        });\r\n    }\r\n\r\n    profileImageUploaded($event): void {\r\n        this.petForm.patchValue({\r\n            profileImageUrl: $event.serverResponse._body\r\n        });\r\n    }\r\n\r\n    profileImageRemoved($event): void {\r\n        this.petForm.patchValue({\r\n            profileImageUrl: ''\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets-add/pets-add.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'appc-pets-home',\r\n    template: require('./pets-home.component.html'),\r\n    styles: [require('./pets-home.component.scss')]\r\n})\r\nexport class PetsHomeComponent implements OnInit {\r\n    cards: any;\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.cards = [\r\n            { route: 'add', title: 'Add', description: 'Add a new pet', icon: 'fa fa-plus', bg: 'bg-aqua' },\r\n            { route: 'view', title: 'View', description: 'View existing pets', icon: 'fa fa-eye', bg: 'bg-green' }\r\n        ];\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets-home/pets-home.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { PetsService } from '../pets.service';\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { User } from \"../../shared/models/user.model\";\r\nimport { Pet } from \"../pet.model\";\r\nimport { Appointment } from \"../appointment.model\";\r\n\r\n@Component({\r\n    selector: 'appc-pets-timeline',\r\n    template: require('./pets-timeline.component.html'),\r\n    styles: [require('./pets-timeline.component.scss')]\r\n})\r\nexport class PetsTimelineComponent implements OnInit {\r\n    pet: Pet;\r\n    petId: string;\r\n    loading: boolean = true;\r\n    constructor(private route: ActivatedRoute, private petsService: PetsService, private userService: UserService, private router: Router) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.petId = this.route.snapshot.params['id'];\r\n        this.petsService.get(this.petId).map(response => {\r\n            var appointments = new Array<Appointment>();\r\n            if (response !== null) {\r\n                var responseArray = this.generateArray(response[\"Appointments\"]);\r\n                responseArray.forEach((value, index, array) => {\r\n                    appointments.push(this.toAppointment(value));\r\n                });\r\n            }\r\n            return new Pet(response[\"Id\"], response[\"Name\"], response[\"OwnerId\"], response[\"ProfileImageUrl\"],\r\n                response[\"ColorHex\"], response[\"Breed\"], response[\"Sex\"], response[\"Species\"], new Date(response[\"BirthDate\"]), appointments);\r\n        }).subscribe((result: Pet) => { this.pet = result; this.loading = false; });\r\n    }\r\n\r\n    private generateArray(obj) {\r\n        return Object.keys(obj).map((key) => { return obj[key] });\r\n    }\r\n\r\n    private toAppointment(response): Appointment {\r\n        var appointmentId = response[\"Id\"];\r\n        var petName = response[\"PetName\"];\r\n        var petId = response[\"PetId\"];\r\n        var state = response[\"State\"];\r\n        var ownerFamilyName = response[\"OwnerFamilyName\"];\r\n        var ownerGivenName = response[\"OwnerGivenName\"];\r\n        var medicalHistory = response[\"MedicalHistory\"];\r\n        var diagnostic = response[\"Diagnostic\"];\r\n        var ownerId = response[\"OwnerId\"];\r\n        var startingTime = new Date(response[\"StartingTime\"]);\r\n        return new Appointment(appointmentId, state, petName, petId,\r\n            ownerFamilyName, ownerGivenName, ownerId, diagnostic, medicalHistory, startingTime);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets-timeline/pets-timeline.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { PetsService } from '../pets.service';\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../../shared/models/user.model\";\r\n\r\n@Component({\r\n    selector: 'appc-pets-view',\r\n    template: require('./pets-view.component.html'),\r\n    styles: [require('./pets-view.component.scss')]\r\n})\r\nexport class PetsViewComponent implements OnInit {\r\n\r\n    pets: any;\r\n\r\n    constructor(private petsService: PetsService, private userService: UserService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userService.getUser().subscribe((user: User) => {\r\n            this.userService.setCurrentUser(user);\r\n            if (user !== null) {\r\n                this.pets = user.pets;\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets-view/pets-view.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'appc-pets',\r\n    template: require('./pets.component.html'),\r\n    styles: [require('./pets.component.scss')]\r\n})\r\nexport class PetsComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"box box-success\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n                <h3 class=\\\"box-title\\\">Add Pet</h3>\\r\\n            </div>\\r\\n            <!-- /.box-header -->\\r\\n            <!-- form start -->\\r\\n            <form novalidate\\r\\n                  (ngSubmit)=\\\"onSubmit()\\\"\\r\\n                  [formGroup]=\\\"petForm\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <image-upload url=\\\"/api/files\\\"\\r\\n                                          [max]=\\\"1\\\"\\r\\n                                          [headers]=\\\"getHeaders()\\\"\\r\\n                                          [buttonCaption]=\\\"'Select Profile Image!'\\\"\\r\\n                                          [dropBoxMessage]=\\\"'Drop your image here!'\\\"\\r\\n                                          [extensions]=\\\"['jpg','png','gif']\\\"\\r\\n                                          (onFileUploadFinish)=\\\"profileImageUploaded($event)\\\"\\r\\n                                          (onRemove)=\\\"profileImageRemoved($event)\\\"></image-upload>\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(petForm.get('profileImageUrl').touched ||\\r\\n                                                         petForm.get('profileImageUrl').dirty) &&\\r\\n                                                         petForm.get('profileImageUrl').errors\\\">\\r\\n                                <span *ngIf=\\\"petForm.get('profileImageUrl').errors.required\\\">\\r\\n                                    Please add pet's profile image.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                            <label>Birth Date</label>\\r\\n                            <my-date-picker [options]=\\\"myDatePickerOptions\\\"\\r\\n                                            formControlName=\\\"birthDate\\\"></my-date-picker>\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(petForm.get('birthDate').touched ||\\r\\n                                                         petForm.get('birthDate').dirty) &&\\r\\n                                                         petForm.get('birthDate').errors\\\">\\r\\n                                <span *ngIf=\\\"petForm.get('birthDate').errors.required\\\">\\r\\n                                    Please enter pet's birth date.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [ngClass]=\\\"{'has-error': (petForm.get('name').touched ||\\r\\n                                              petForm.get('name').dirty) &&\\r\\n                                              !petForm.get('name').valid }\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <label for=\\\"nameId\\\">Name</label>\\r\\n                            <input class=\\\"form-control\\\"\\r\\n                                   id=\\\"nameId\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"(Required)\\\"\\r\\n                                   formControlName=\\\"name\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(petForm.get('name').touched ||\\r\\n                                                         petForm.get('name').dirty) &&\\r\\n                                                         petForm.get('name').errors\\\">\\r\\n                                <span *ngIf=\\\"petForm.get('name').errors.required\\\">\\r\\n                                    Please enter a pet name.\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"petForm.get('name').errors.minlength\\\">\\r\\n                                    Pet name must be longer than 3 characters.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <label for=\\\"sexRadios\\\">Species</label>\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"radio\\\" formControlName=\\\"species\\\" id=\\\"speciesRadios\\\" value=\\\"cat\\\" checked=\\\"\\\">\\r\\n                                    Cat\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"radio\\\" formControlName=\\\"species\\\" id=\\\"speciesRadios\\\" value=\\\"dog\\\" checked=\\\"\\\">\\r\\n                                    Dog\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <label for=\\\"sexRadios\\\">Sex</label>\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"radio\\\" formControlName=\\\"sex\\\" id=\\\"sexRadios\\\" value=\\\"male\\\" checked=\\\"\\\">\\r\\n                                    Male\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"radio\\\" formControlName=\\\"sex\\\" id=\\\"sexRadios\\\" value=\\\"female\\\" checked=\\\"\\\">\\r\\n                                    Female\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [ngClass]=\\\"{'has-error': (petForm.get('breed').touched ||\\r\\n                                              petForm.get('breed').dirty) &&\\r\\n                                              !petForm.get('breed').valid }\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <label for=\\\"breedId\\\">Breed</label>\\r\\n                            <input class=\\\"form-control\\\"\\r\\n                                   id=\\\"breedId\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"(Required)\\\"\\r\\n                                   formControlName=\\\"breed\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(petForm.get('breed').touched ||\\r\\n                                                         petForm.get('breed').dirty) &&\\r\\n                                                         petForm.get('breed').errors\\\">\\r\\n                                <span *ngIf=\\\"petForm.get('breed').errors.required\\\">\\r\\n                                    Please enter pet's breed.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-xs-4 col-sm-9\\\">\\r\\n                            <label for=\\\"colorId\\\">Color</label>\\r\\n                            <input type=\\\"text\\\" [(colorPicker)]=\\\"color\\\" (colorPickerChange)=\\\"onColorPickerChanged($event)\\\" [style.background]=\\\"color\\\" class=\\\"form-control\\\" formControlName=\\\"colorHex\\\" id=\\\"colorId\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n         \\r\\n                </div>\\r\\n                <!-- /.box-body -->\\r\\n\\r\\n                <div class=\\\"box-footer\\\">\\r\\n                    <div class=\\\"col-xs-12\\\">\\r\\n                        <button class=\\\"btn btn-success\\\"\\r\\n                                type=\\\"submit\\\"\\r\\n                                [disabled]=\\\"!petForm.valid\\\">\\r\\n                            Submit\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-add/pets-add.component.html\n// module id = 361\n// module chunks = 1","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\" *ngFor=\\\"let card of cards\\\">\\r\\n        <div class=\\\"info-box\\\">\\r\\n            <a routerLink=\\\"{{card.route}}\\\">\\r\\n                <span class=\\\"info-box-icon {{card.bg}}\\\">\\r\\n                    <i class=\\\"{{card.icon}}\\\"></i>\\r\\n                </span>\\r\\n            </a>\\r\\n            <div class=\\\"info-box-content\\\">\\r\\n                <span class=\\\"info-box-text\\\">{{card.title}}</span>\\r\\n                <span class=\\\"info-box-number\\\">{{card.description}}</span>\\r\\n\\r\\n            </div>\\r\\n            <!-- /.info-box-content -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-home/pets-home.component.html\n// module id = 362\n// module chunks = 1","module.exports = \"<div class=\\\"box box-default\\\">\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <ul class=\\\"users-list clearfix\\\" *ngIf=\\\"!loading\\\">\\r\\n                    <li>\\r\\n                        <img src=\\\"{{pet.profileImageUrl}}\\\" alt=\\\"{{pet.name}} Profile Image\\\">\\r\\n                        <a class=\\\"users-list-name\\\">{{pet.name}}</a>\\r\\n                        <span class=\\\"users-list-date\\\">{{pet.species}}, {{pet.breed}}, {{pet.sex}}</span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n                <ul class=\\\"timeline\\\" *ngIf=\\\"!loading\\\">\\r\\n                    <li *ngFor=\\\"let appointment of pet.appointments\\\">\\r\\n                        <i class=\\\"fa fa-check-circle-o bg-green\\\" *ngIf=\\\"appointment.medicalHistory\\\"></i>\\r\\n\\r\\n                        <i class=\\\"fa fa-info-circle bg-green\\\" *ngIf=\\\"!appointment.medicalHistory\\\"></i>\\r\\n\\r\\n                        <div class=\\\"timeline-item\\\">\\r\\n                            <span class=\\\"time\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{ appointment.startingTime | date :'medium' }} </span>\\r\\n\\r\\n                            <h3 class=\\\"timeline-header\\\" *ngIf=\\\"appointment.medicalHistory\\\">\\r\\n                                Appointment completed. Diagnostic and medical history record updated.\\r\\n                            </h3>\\r\\n\\r\\n                            <h3 class=\\\"timeline-header\\\" *ngIf=\\\"!appointment.medicalHistory\\\">\\r\\n                                We are looking forward to meeting you and your beloved pet.\\r\\n                            </h3>\\r\\n\\r\\n                            <div class=\\\"timeline-body\\\" *ngIf=\\\"appointment.medicalHistory\\\">\\r\\n                                {{appointment.diagnostic}}\\r\\n                                <br />\\r\\n                                {{appointment.medicalHistory}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <i class=\\\"fa fa-clock-o bg-gray\\\"></i>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-timeline/pets-timeline.component.html\n// module id = 363\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"box box-success\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n                <h3 class=\\\"box-title\\\">Latest Pets</h3>\\r\\n            </div>\\r\\n            <!-- /.box-header -->\\r\\n            <div class=\\\"box-body no-padding\\\">\\r\\n                <ul class=\\\"users-list clearfix\\\">\\r\\n                    <li *ngFor=\\\"let pet of pets\\\">\\r\\n                        <img src=\\\"{{pet.profileImageUrl}}\\\" alt=\\\"{{pet.name}} Profile Image\\\">\\r\\n                        <a class=\\\"users-list-name\\\" routerLink=\\\"timeline/{{pet.id}}\\\">{{pet.name}}</a>\\r\\n                        <span class=\\\"users-list-date\\\">{{pet.species}}, {{pet.breed}}, {{pet.sex}}</span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n                <!-- /.users-list -->\\r\\n            </div>\\r\\n            <!-- /.box-body -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-view/pets-view.component.html\n// module id = 364\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets.component.html\n// module id = 365\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-add/pets-add.component.scss\n// module id = 371\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-home/pets-home.component.scss\n// module id = 372\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-timeline/pets-timeline.component.scss\n// module id = 373\n// module chunks = 1","module.exports = \".users-list > li img {\\n  max-width: 65%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets-view/pets-view.component.scss\n// module id = 374\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+pets/pets.component.scss\n// module id = 375\n// module chunks = 1","export class Appointment {\r\n    constructor(\r\n        public id: string,\r\n        public state: string, \r\n        public petName: string,\r\n        public petId: string,\r\n        public ownerFamilyName: string,\r\n        public ownerGivenName: string,\r\n        public ownerId: string,\r\n        public diagnostic: string,\r\n        public medicalHistory: string,\r\n        public startingTime: Date\r\n    ) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/appointment.model.ts","import { Appointment } from \"./appointment.model\";\r\n\r\nexport class Pet {\r\n    constructor(\r\n        public id: string,\r\n        public name: string,\r\n        public ownerId: string,\r\n        public profileImageUrl: string,\r\n        public colorHex: string,\r\n        public breed: string,\r\n        public sex: string,\r\n        public species: string,\r\n        public birthDate: Date,\r\n        public appointments: Appointment[]\r\n    ) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pet.model.ts","export class PetAddFormModel {\r\n    constructor(\r\n        public name: string,\r\n        public species: string,\r\n        public sex: string,\r\n        public breed: string,\r\n        public colorHex: string,\r\n        public ownerId: string,\r\n        public ownerEmail: string,\r\n        public profileImageUrl: string,\r\n        public birthDate: string\r\n    ) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets-add/pets-add.model.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PetsComponent } from './pets.component';\r\nimport { PetsHomeComponent } from './pets-home/pets-home.component';\r\nimport { PetsAddComponent } from './pets-add/pets-add.component';\r\nimport { PetsViewComponent } from \"./pets-view/pets-view.component\";\r\nimport { PetsTimelineComponent } from \"./pets-timeline/pets-timeline.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: PetsComponent, children: [\r\n            { path: '', component: PetsHomeComponent },\r\n            { path: 'add', component: PetsAddComponent },\r\n            { path: 'view', component: PetsViewComponent },\r\n            { path: 'view/timeline/:id', component: PetsTimelineComponent }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const InternalRouterModule = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./Client/modules/+pets/pets.routes.ts"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAKA;AAIA;AAAA;AAFA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAdA;AADA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AATA;AAIA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxEA;AALA;AACA;AACA;AACA;AACA;AAWA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AAOA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAXA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAIA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAxCA;AALA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAQA;AAIA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAfA;AALA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;ACXA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAfA;;;;;;;;;;;ACEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAfA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAdA;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;","sourceRoot":""}